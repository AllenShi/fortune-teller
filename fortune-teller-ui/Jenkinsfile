node {
    def app

    stage('Clone repository') {
        /* Let's make sure we have the repository cloned to our workspace */

        checkout scm
    }

    stage('Compile code') {

      withMaven(maven: 'maven') {
        sh 'cd fortune-teller-ui ; mvn clean package'
      }
    }
      
    stage('Build image') {
        app = docker.build("${params.namespace}/fortune-teller-ui")
    }

    stage('Push image') {
        /* Finally, we'll push the image with two tags:
         * First, the incremental build number from Jenkins
         * Second, the 'latest' tag.
         * Pushing multiple tags is cheap, as all the layers are reused. */
        docker.withRegistry('https://mycluster:8500', 'icp-credentials') {
            app.push("${env.BUILD_NUMBER}")
            app.push("latest")
        }
    }
    
    stage('Deploy application') {
        /* Update deployment to use latest image */
      sh "sed -i 's|jkwong/fortune-teller-ui:latest|mycluster:8500/${params.namespace}/fortune-teller-ui:${env.BUILD_NUMBER}/g' fortune-teller-ui/kube-deployment.yaml "
      sh "sed -i 's|spring-config-server-bootstrap|${params.namespace}-spring-stack-spring-config-server-bootstrap/g' fortune-teller-ui/kube-deployment.yaml "

      sh '''
        #!/bin/bash
        
        kubectl --namespace ${params.namespace} apply -f fortune-teller-ui/kube-deployment.yaml
        kubectl --namespace ${params.namespace} apply -f fortune-teller-ui/kube-service.yaml
      '''
    }
}